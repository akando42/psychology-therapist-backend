/token/users:
    post:
		summary:
			returns the code after validations
			origin must be encoded with a key and the mac address combined. The encoded passphrase should be package name
		description:
			The token which is returned will contain the json containing mac-address, 
		request:
			mac:<MacAdress>
			origin:<Encoded Source Location>
		responses:
			200:
			{
				data:{
					code:<Store this code in System Preference>
				},
				message:"Successfully got the token"
			}
			514
			{
				message:"Origin Error. Its a faulty encryption"
			}


/user/login:
	post:
		summary:
			This API will make the user login
			Store all the details in the system preferences
			Store the ID returned in the response. You would need it in all the further calls
		request:
			code:<Code Stored in the System Preferences>
			mac:<Mac Address>
			email:<email ID>
			password:<Password>
		response:
			200:
			{
				data: {
					id:<Store this. Would need this in any further calls>
					fName:<>
					lName:<>
					image:<base64 encoded image | null if empty>
					email:<>
				},
				message:"Successfully logged in"
			}
			513:
			{
				message:"Token Error"
			}
			525:
			{
				message:<Any errors that comes while loging in>
			}


/user/register
	post:
		summary:
			This API will make the user Register
			Send all the information
			Dont forget to have validation on all the fields
		request:
			code:<Code Stored in the System Preferences>
			mac:<Mac Address>
			firstName: <Full name>
			lastName: <Last name>
			email:<Email ID>
			password:<password>
			phone:<Phone number with country code>
		response:
			200:
			{
				message:"Successfully registered. Please verify your Email"
			}
			513:
			{
				message:"Token Error"
			}
			535:
			{
				message:<Any errors that comes while registering>
			}


/user/profile/update
	post:
		summary:
			Update information about the profile
			Note: Just send the parameters you want to update, it will be taken care on the server
		request:
			code:<Code Stored in the System Preferences>
			mac:<Mac Address>
			id:<id you get while logging in>
			firstName: <Full name>
			lastName: <Last name>
			password:{
				oldPassword:<>
				newPassword:<>
			}
			phone:<Phone number with country code>
			image:<base64 encoded Image>
		response:
			200:
			{
				message:"Successfully Updated your informations"
			}
			513:
			{
				message:"Token Error"
			}
			575:
			{
				message:<Any errors that comes while updating your profile>
			}

/user/profile/get
	post:
		summary:
			Retrieves all information about the profile
		request:
			code:<Code Stored in the System Preferences>
			mac:<Mac Address>
			id:<id you get while logging in>
		response:
			200:
			{
				data:{
					fisrtName:<Full Name>
					lastName:<Full Name>
					phone:<>
					email:<>
					image:<base64 encoded Image | null>
				},
				message:"Retrieved about the profile"
			}
			513:
			{
				message:"Token Error"
			}
			575:
			{
				message:<Any errors that comes while getting profile>
			}


/user/address/add
	post:
		summary:
			Adds the address to the address list of the user
		request:
			code:<Code Stored in the System Preferences>
			mac:<Mac Address>
			id:<id you get while logging in>
			name:<Name of the address, like Home, etc>
			lattitude:<>
			longitude:<>
			address:<reverse geocoded address>
			parkLat:<>
			parkLong:<>
			parkAddress:<reverse geocoded parking address>
		response:
			200:
			{
				data:{
					addressId:<Store this. Its the ID of the Address>
				}
				message:"Successfully Added the addresses"
			}
			513:
			{
				message:"Token Error"
			}
			545:
			{
				message:<Any errors that comes while adding address>
			}

/user/address/get
	post:
		summary:
			Retrieves all the addresses
		request:
			code:<Code Stored in the System Preferences>
			mac:<Mac Address>
			id:<id you get while logging in>
		response:
			200:
			{
				data:[
					{
						addressId:<>
						name:<>
						lattitude:<>
						longitude:<>
						address:<>
						parkLat:<>
						parkLong:<>
						parkAddress:<>
					},
					...
				],
				message:"Retrieved all the addresses"
			}
			513:
			{
				message:"Token Error"
			}
			545:
			{
				message:<Any errors that comes while getting address>
			}

/user/address/delete
	post:
		summary:
			Retrieves all the addresses
		request:
			code:<Code Stored in the System Preferences>
			mac:<Mac Address>
			id:<id you get while logging in>
			addressId:<Id of the address>
		response:
			200:
			{
				data:[],
				message:"Successfully Deleted the address"
			}
			513:
			{
				message:"Token Error"
			}
			545:
			{
				message:<Any errors that comes while getting address>
			}


/user/payments/add
	post:
		summary:
			Adds a payment which you processed
			Store the payment Id. You would need to use the payment ID when the transaction is complete
		request:
			code:<Code Stored in the System Preferences>
			mac:<Mac Address>
			id:<id you get while logging in>
			amount:<Amount Transfered>
			sessionId:<The Session ID for which you paid>
		response:
			200:
			{
				data: {	
					paymentId:<Store this Id>
				},
				message:"Successfully Added payments"
			}
			513:
			{
				message:"Token Error! Contact the proiders"
			}
			555:
			{
				message:<Any errors that comes while adding payments>
			}

/user/payments/complete
	post:
		summary:
			Completes the transacions by putting a transaction ID
		request:
			code:<Code Stored in the System Preferences>
			mac:<Mac Address>
			id:<id you get while logging in>
			paymentId:<Payment ID>
			transactionId:<Transactin ID from the Stripe>
		response:
			200:
			{
				data: {
					paymentId:<Store this Id>
				},
				message:"Successfully Added payments"
			}
			513:
			{
				message:"Token Error! Contact the proiders"
			}
			555:
			{
				message:<Any errors that comes while adding payments>
			}


/user/payments/get
	post:
		summary:
			Retrieves all the payments
		request:
			code:<Code Stored in the System Preferences>
			mac:<Mac Address>
			id:<id you get while logging in>
		response:
			200:
			{
				data:{
					pending:[
						{
							transactionId:<>
							sessionId:<>
							amount:<>
							providerName:<>
							massageType:<>
							massageLength:<>
							massageDate:<>
						},
						....
					],
					present:[
						{
							transactionId:<>
							sessionId:<>
							amount:<>
							providerName:<>
							massageType:<>
							massageLength:<>
							massageDate:<>
						},
						....
					],
					past:[
						{
							transactionId:<>
							sessionId:<>
							amount:<>
							providerName:<>
							massageType:<>
							massageLength:<>
							massageDate:<>
						},
						....
					]
				},
				message:"Retrieved all the payments"
			}
			513:
			{
				message:"Token Error"
			}
			555:
			{
				message:<Any errors that comes while getting payments>
			}


/user/session/add
	post:
		summary:
			Add the sessions to the database
			Store Sessions Id, might need in later queries
		request:
			code:<Code Stored in the System Preferences>
			mac:<Mac Address>
			id:<id you get while logging in>
			massageType:<>
			preferredGender:<>
			massageLength:<>
			dateTime:<In the form YYYY-MM-DD hh:mm:ss>
			addressId:<Id of the Address>
			extras:{
				equipements:<true|false>
				pets:<cat|dog>
				medicalInformation:<>
			}
		response:
			200:
			{
				data:{
					sessionId:<Store this session Id>
				},
				message:"Successfully Booked a session. Proceed to pay"
			}
			513:
			{
				message:"Token Error"
			}
			565:
			{
				message:<Any errors that comes while adding payments>
			}

/user/session/get
	post:
		summary:
			Retrieves all the sessions booked
		request:
			code:<Code Stored in the System Preferences>
			mac:<Mac Address>
			id:<id you get while logging in>
		response:
			200:
			{
				data:{
					pending:[
						{
							sessionId:<>
							amount:<>
							providerName:<>
							massageType:<>
							massageLength:<>
							massageDate:<>
						},
						....
					],
					present:[
						{
							sessionId:<>
							amount:<>
							providerName:<>
							massageType:<>
							massageLength:<>
							massageDate:<>
						},
						....
					],
					past:[
						{
							sessionId:<>
							amount:<>
							providerName:<>
							massageType:<>
							massageLength:<>
							massageDate:<>
						},
						....
					]
				},
				message:"Retrieved all the sessions booked"
			}
			513:
			{
				message:"Token Error"
			}
			545:
			{
				message:<Any errors that comes while getting address>
			}
