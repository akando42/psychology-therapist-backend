/provider/login
    post:
        summary: validates a provider's credentials
        description: 
            Receives all the login information of a provider, and validates them along with the account_token. If the login information is correct, it will create a cookie named session_token in the provider's browser. The session_token cookie will be valid for 30 minutes, and will depend on the ID of the provider in the database, the IP address from where the request originated, the domain name from the request is being made, the date when the request was made, and the signature of the provider in the database. The session_token cookie will be encrypted using AES 256 symetric encription, using a 32 bit key, the key will be obtained from a combination of the provider ID in the database and the date when the provider signed up. The token will be the encrypted value of a JSON object containing provider: the ID of the provider in the database, date: the date when the cookie was created, ip: the IP address that originated the request, domain: the domain name that originated the request, footprint: the last 10 digits of the provider signature in the database, signature: the result of encrypting using md5 all the values combined.
        produces:
            - application/json
        parameters:
            - account_token : <use the account token>
            - email
              massage@therapy.coach
            - password
              Massage@12345
        responses:
            200
            {
                data:{
                  session_token:"Use this token for all the other requests for HRs"
                }
                message:""
            }


hr/get/pending
hr/get/active
hr/get/rejected
  	post
		summary:
			Gives the desired requests
		request:
			access_token:<>
			session_token:<>
		response:
		200:
			{
				data:{
					<ProviderID>:{
						firstName:"FirstName",
						lastName:"LastName",
						email:"EmailID",
						phone:"Phone",
						image:"ProfileImage",
						experience:"Experience",
						qualifications:"Qualifications",
						resume:"Resume",
						status:"AccountStatus",
						docs:[
							{
								id:"ProviderDocID",
								docTitle:"DocTitle",
								docContent:"DocContent"
							},..
						]
					},
					.....
				}
				message:"Some message"
			}

hr/action/accept
hr/action/reject
	post:
		summary: To accept or reject the account
		request:
			access_token:<>
			session_token:<>
			providerId:<ID of the Provider you recieved>
		response:
		200:
			{
				message:"successfully accepted/rejected the applications"
			}
